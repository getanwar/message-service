services:
  messages-service:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: messages-service
    restart: always
    ports:
      - '3000:3000'
    environment:
      - NODE_ENV=production
      - MONGO_URI=mongodb://mongodb:27017/tawk
      - KAFKA_BROKERS=kafka:9093
      - KAFKA_CLIENT_ID=tawk-messages-client
      - KAFKA_GROUP_ID=tawk-messages-group
      - ELASTICSEARCH_NODE=http://elasticsearch:9200
    depends_on:
      - mongodb
      - kafka
      - elasticsearch

  mongodb:
    image: mongo:latest
    container_name: mongodb
    restart: always
    ports:
      - '27017:27017'
    volumes:
      - mongodb_data:/data/db

  mongo-express:
    image: mongo-express:latest
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_URL: mongodb://mongodb:27017/
      ME_CONFIG_BASICAUTH: false

  zookeeper:
    image: wurstmeister/zookeeper:latest
    container_name: zookeeper
    ports:
      - '2181:2181'

  kafka:
    image: wurstmeister/kafka:2.13-2.8.1
    container_name: kafka
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: 'audit-log:1:1,api-log:1:1'
    ports:
      - '9092:9092'
    depends_on:
      - zookeeper

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:9.0.1
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - 'ES_JAVA_OPTS=-Xms512m -Xmx512m'
    ports:
      - '9200:9200'
      - '9300:9300'
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    restart: always

volumes:
  mongodb_data:
  elasticsearch_data:
